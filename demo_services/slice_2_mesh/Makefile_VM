LIB_DIR = /root/third_party_libs/
EIGEN_DIR = $(LIB_DIR)eigen
CINOLIB_DIR = $(LIB_DIR)cinolib/include
TRIANGLE_DIR = $(LIB_DIR)triangle
TETGEN_DIR = $(LIB_DIR)tetgen1.5.0
BOOST_DIR = $(LIB_DIR)boost_1_67_0

CC= g++
RM= rm
TAR= tar

FLAGS = -std=c++11 -DIS64BITPLATFORM -DTETLIBRARY -DCINOLIB_USES_BOOST -DCINOLIB_USES_TRIANGLE -DCINOLIB_USES_TETGEN
CFLAGS = -Wall -fpermissive -O3 -DNDEBUG -I./ -I$(BOOST_DIR) -I$(LIB_DIR) -I$(CINOLIB_DIR) -I$(TETGEN_DIR) -I$(EIGEN_DIR) -I$(TRIANGLE_DIR)

LIBS += -L$(TETGEN_DIR)/build -ltet
LIBS += -L/usr/lib -ltriangle

SOURCES.C    = main.cpp \
		plc2tet.cpp \
		slice2plc.cpp \
		edge_processing.cpp \
                trianglulate.cpp


INCLUDES =

OBJECTS  =  $(SOURCES.C:.C=.o)

EXECUTABLES  =  ./build/slice2mesh

#----------


%.o:	%.C

	$(CC) $(FLAGS) $(CFLAGS) -c -o $@ $<



$(EXECUTABLES): $(OBJECTS)

	mkdir -p ./build
	$(CC) $(FLAGS) $(CFLAGS) $(OBJECTS) -o $(EXECUTABLES) $(LIBS)



clean :
	$(RM) -f *.o


backup :
	$(RM) -f backup.tgz
	$(TAR) zcfv backup.tgz $(SOURCES.C) $(INCLUDES) Makefile
